; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "ESMART HMS"
#define MyAppVersion "1.0"
#define MyAppPublisher "EnakheOrg, Inc."
#define MyAppURL "https://www.example.com/"
#define MyAppExeName "ESMART HMS.exe"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

[Setup]
AppId={{E3FB4145-BAB8-4450-8BCD-19F828A3050C}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
ChangesAssociations=yes
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
OutputDir=C:\Users\izuag\OneDrive\Desktop\ESMART_HMS
OutputBaseFilename=ESMART SETUP
SetupIconFile=C:\Users\izuag\OneDrive\Desktop\ESMART_HMS\Files\favicon.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern
PrivilegesRequired=admin

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "C:\Users\izuag\OneDrive\Desktop\ESMART_HMS\bin\Release\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\izuag\OneDrive\Desktop\ESMART_HMS\bin\Release\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "C:\Users\izuag\OneDrive\Desktop\ESMART_HMS\Prerequisite\SQLServer.exe"; DestDir: "{tmp}"; Flags: ignoreversion

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{tmp}\SQLServer.exe"; Parameters: "/QS /ACTION=Install /IACCEPTSQLSERVERLICENSETERMS"; StatusMsg: "Installing SQL Server..."; Flags: postinstall runhidden runascurrentuser
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Code]
function IsSQLServerInstanceExists(): Boolean;
begin
  // Check if any SQL Server instance is installed by querying the registry
  Result := RegKeyExists(HKLM, 'SOFTWARE\Microsoft\Microsoft SQL Server\Instance Names\SQL');
end;

procedure InitializeWizard();
begin
  // Initialization code for the wizard
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
  // Check if SQL Server instance exists before running the installer
  if CurStep = ssPostInstall then
  begin
    if not IsSQLServerInstanceExists() then
    begin
      // SQL Server installation will be handled by the [Run] section
    end;
  end;
end;
